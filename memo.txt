開発環境構築でやったこと
・homebrew インストール
・gitインストール
・docker for Mac インストール
　・dockerファイル設置
　　git clone https://github.com/kino-code/docker-python C:\\Users\\masachikayamamoto\\Documents\\docker-python
　・docker exec -it docker-python /bin/bash
　・



m.yamamoto.0312@eos.ocn.ne.jp
a62othha@one.ocn.ne.jp

・/Users/masachikayamamoto/Documents/docker-python/Dockerfile

=========================================================================================================
・ssh key generate
ssh-keygen -t ed25519 -C “m.yamamoto.0312@gamil.com“


dquote>
となる。
Control + g で抜ける

pbcopy < ~/.ssh/id_ed25519.pub

ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIGgdnC5klJNXTb2/3wmuGferwIGxAFdIt86BeqxmIZ1z “m.yamamoto.0312@gamil.com“

echo "# memo" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin git@github.com:masachika-yamamoto/memo.git
git push -u origin main


git config --global user.name “masachika yamamoto”
git config --global user.email m.yamamoto.0312@gmail.com




ffmpeg -i /mnt/d/Files/movie/999_others/WPB_51_YUNO_OHARA.ISO -vcodec cinepak -acodec mp3 -aspect 4:3 -sn /mnt/d/Files/movie/999_others/WPB_51_YUNO_OHARA.mp4


ffmpeg -i  

----------------------------------------------------------------------

実施詳細
.bashrc修正
下記コマンドを実行して.bashrcファイルを開く。
  $ cd
  $ vim .bashrc
下記内容を開いた.bashrcファイルに記載する。
  alias ll='ls -laF'
保存して閉じる。

.bash_profile修正
下記コマンドを実行して.bash_profileファイルを開く。

  $ vim .bash_profile
下記内容を開いた.bash_profileファイルの最終行に記載する。
  source ~/.bashrc
保存して閉じる。

設定の反映
下記コマンドを実行して設定を反映させる。

  $ source .bash_profile

----------------------------------------------------------------------
https://zenn.dev/numagotatu/articles/2024-04-07-docker-on-multipass



multipass launch --cpus 2 --memory 2G --disk 10G --name hoge 22.04
# multipass launch --cpus <割り当てるCPU数> --memory <割り当てるメモリ数[GByte]>G --disk <割り当てるディスクサイズ>G --name <仮想環境名> <イメージタグ>

# 仮想環境の名前を設定
INSTANCE_NAME="hoge"

# ssh 接続設定用に仮想環境名ディレクトリを切る
WORKSPACE="${HOME}/.ssh/multipass/${INSTANCE_NAME}"
mkdir -p "${WORKSPACE}"

# 仮想環境名の鍵生成
## パスフレーズは空
ssh-keygen -t ecdsa -b 521 -N "" -f "${WORKSPACE}/${INSTANCE_NAME}"

# config ファイル作成
touch "${WORKSPACE}/config"

# 公開鍵を仮想環境の authorized_keys に追加
## 下記コマンドでなくても multipass shell <仮想環境名> でログインして、 authorized_key に直接公開鍵を追加するでも OK
multipass exec hoge --working-directory "/home/ubuntu/.ssh" -- bash -c "echo '$(cat ${WORKSPACE}/${INSTANCE_NAME}.pub)' | tee -a authorized_keys"
# multipass exec <仮想環境名> --working-directory <コマンド実行ディレクトリ> -- <実行コマンド>



ファイル (F) 編集(E) タブ (T) ヘルプ (H)
<?php
require_once(_DIR_ . '/config.php');
use Abraham\Twitter OAuth\TwitterOAuth;
$connection = new TwitterOAuth (
CONSUMER_KEY,
CONSUMER_SECRET_KEY, ACCESS_TOKEN,
ACCESS_TOKEN_SECRET);
$url = "https://api.darksky.net/forecast/221cb3c46cdaabad9d99c405209eff41/35.661777,139.704051?lang=ja"; $ch =
curl_init();
curl_setopt($ch, CURLOPT_URL, $url);
curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
$res =
curl_exec($ch);
$json = mb_convert_encoding($res, 'UTF8', 'ASCII, JIS, UTF-8, EUC-JP, SJIS-WIN'); $obj = json_decode($json, true);
$datetime
=
date("y-m-d H:i:s", strtotime('+9 hour' , $obj ["currently"]["time"])); $obj ["currently"]["summary"];
$summary = '30 : '
$temperature = ' '気温 : getCelsius (intval($obj ["currently"]["temperature"])) . '';
$apparent Temperature = ': *ERE getCelsius (intval($obj ["currently"]["apparent Temperature"])) . ''; $hashtag = "$datetime \n # #"; $string = $summary "\n" . $temperature . "\n" . $apparent Temperature . "\n\n". $hashtag;
$res = $connection->post(
"statuses/update", ['status' => $string]);
if ($res) {
echo 'Succes3!' PHP_EOL;
}else {
echo "Error!', Sres->errors[0]--message, PHP_EUL;
function getCelsius ($fahrenheit){
$celsius = ($fahrenheit - 32)
return round ($celsius);
(5 / 9);
&
}
pi@raspbe

p1:
pi@raspberrypi: S
pi@raspberrypi:~ $ view bot_php/bot.php pi@raspberrypi: $
pi@raspberrypi:~ $
pi@raspberrypi:~$ crontab -1
# Edit this file to introduce tasks to be run by cron.
#
# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run # and what command to run for the task
#
# To define the time you can provide concrete values for # minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').#
# Notice that tasks will be started based on the cron's system # daemon's notion of time and timezones.
#
# Output of the crontab jobs (including errors) is sent through
I
# email to the user the crontab file belongs to (unless redirected).
#
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
#
# For more information see the manual pages of crontab(5) and cron (8)
#
#mh dom mon dow
*/10 *
command
*** wget -q -0 /dev/null http://mydns786722: rHBy8iXNsuX@www.mydns.jp/login.html
0 */1 *** /usr/bin/php /home/pi/bot_php/bot.php
pi@raspberrypi:~ $ ||


----------------------------------------------------------------------
yahoo api

Client ID：
dj00aiZpPW55ekpCQVNrSmZVciZzPWNvbnN1bWVyc2VjcmV0Jng9NmE-

シークレット：
S03iL6RrawYm0Zc2Hqo6dpFt78vH7tEJTEAl3gtS

request sample
https://map.yahooapis.jp/weather/V1/place?coordinates=139.732293,35.663613&appid=dj00aiZpPW55ekpCQVNrSmZVciZzPWNvbnN1bWVyc2VjcmV0Jng9NmE-

Latitude and Longitude

渋谷駅
緯度: 35.658034 経度: 139.701636
35.658034,139.70163

https://map.yahooapis.jp/weather/V1/place?coordinates=139.701636,35.658034&appid=dj00aiZpPW55ekpCQVNrSmZVciZzPWNvbnN1bWVyc2VjcmV0Jng9NmE-

岩手飯岡駅
39.6537526 141.1466648
https://map.yahooapis.jp/weather/V1/place?coordinates=141.1466648,39.6537526&appid=dj00aiZpPW55ekpCQVNrSmZVciZzPWNvbnN1bWVyc2VjcmV0Jng9NmE-


----------------------------------------------------------------------
天気予報　API
https://www.weatherapi.com/docs/#intro-request

346c6509a96342548bc110431242912

渋谷駅
curl 'https://api.weatherapi.com/v1/current.json?key=346c6509a96342548bc110431242912&q=48.8567,2.3508&aqi=no'
curl 'http://api.weatherapi.com/v1/forecast.json?key=346c6509a96342548bc110431242912&q=35.658034,139.70163&days=1&aqi=no&alerts=no&lang=ja'

岩手飯岡駅
39.6537526,141.1466648
curl 'http://api.weatherapi.com/v1/forecast.json?key=346c6509a96342548bc110431242912&q=39.6537526,141.1466648&days=1&aqi=no&alerts=no&lang=ja'
curl 'http://api.weatherapi.com/v1/forecast.json?key=346c6509a96342548bc110431242912&q=39.6537526,141.1466648&days=2&aqi=no&alerts=no'

http://api.weatherapi.com/v1/forecast.json?key=346c6509a96342548bc110431242912&q=35.658034,139.70163&days=2&aqi=no&alerts=no


sudo killall -HUP mDNSResponder

nslookup api.weatherAapi.com
nslookup github.com


-----------------------------------------------------------------------------------------------------------------------------
ubuntu python install 
https://qiita.com/murakami77/items/b612734ff209cbb22afb

sudo apt update
sudo apt upgrade -y

sudo apt install -y python3-pip

pip3 -V

multipass mount ~/ubuntu hoge:~/ubuntu
multipass info hoge

multipass umount hoge
multipass info hoge

pip install requests
または
pip3 install requests

python -m pip install requests

pip freeze | grep -e request
または
pip3 freeze | grep -e request

pip install tweepy
pip3 install tweepy

datetime


-----------------------------------------------------------------------------------------------------------------------------

sudo apt install pipx
pipx install tweepy


-----------------------------------------------------------------------------------------------------------------------------

Client ID
NFoyenotb0JLalJtRG50bzlXaW46MTpjaQ

Client Secret
rJkqw0ChSX8SRj2nizeOFbmqHjvcFCl5uED9gLURgpKFNXnTd5

Comsumer API Key
xsVwNlnu9Tbo1aDRgICNMC3T6

Comsumer API Secret
JpgmvD8OEa7qPF0mVjwu6y18cexlILlhvKGOE8ZhJt9gdgz65y

Bearer Token
AAAAAAAAAAAAAAAAAAAAAMte7wAAAAAAB67lHd1%2FPyZpllbLlUnF%2BHhhOBQ%3DHPuzM1O8FZPrNACsGoztXyXhu0ZSvQSTHLUxbDM9KPm7CKLgQI

Access Token
972716985342570496-cvumeoorapgTDuJvTtie4tUaocyDG1Z

Access Token Secret
OlDS5taOCt3tveeWjCZ3jny1g6dCITscqjgZjsuQtlg24

-----------------------------------------------------------------------------------------------------------------------------

空模様 : 薄曇り
気温 : 25度
体感温度 : 25度

2022-10-02 18:00:02 
#渋谷 #天気

0 * * * * /home/backup.sh

10 * * * * python3 /home/ubuntu/ubuntu/tweet_weather.py

-----------------------------------------------------------------------------------------------------------------------------
aws

ssh -i "./aws_masachika.pem" ubuntu@ec2-13-55-74-1.ap-southeast-2.compute.amazonaws.com


python3

wget https://www.python.org/ftp/python/3.12.8/Python-3.12.8.tgz

tar -xvf Python-3.12.8.tgz

./configure
make
sudo make install

Ubuntu環境のpip
https://www.python.jp/install/ubuntu/pip.html#2XQ9V7

sudo apt install python3-pip


-----------------------------------------------------------------------------------------------------------------------------
amazon linux
ssh -i "./aws_masachika.pem" ec2-user@ec2-54-252-39-13.ap-southeast-2.compute.amazonaws.com

"/Users/masachikayamamoto/.ssh/aws_masachika.pem"

hachiko.timer

sudo vim /etc/systemd/system/hachiko.service
sudo vim /etc/systemd/system/hachiko.timer

sudo systemctl daemon-reload
sudo systemctl enable hachiko.timer
sudo systemctl start hachiko.timer

journalctl -u hachiko.service


ExecStart=/usr/bin/python3 /home/ec2-user/test.py
Environment="PYTHONUSERBASE=/home/ec2-user/.local"
WorkingDirectory=/home/ec2-user

・設定の有効化
サービス自動起動有効
sudo systemctl enable hachiko.timer
サービスの起動
sudo systemctl start hachiko.timer

・起動確認
再起動後など、自動起動されることを確認
sudo systemctl is-enabled hachiko.timer
ステータスの確認
sudo systemctl status hachiko.timer
タイマー設定の一覧で確認
sudo systemctl list-timers

・ログ確認
journalctl -u hachiko.service

tweepy.errors.TooManyRequests: 429 Too Many Requests


*-*-* */3:00:00


systemd-analyze calendar "*-*-* 00:00:00"
systemd-analyze calendar "*-*-* */3:00:00"
systemd-analyze calendar "*-*-* *:0/5:00"
systemd-analyze calendar "*-*-* *:0/5:00"
systemd-analyze calendar "*-*-* */2:00:00"
systemd-analyze calendar "*-*-* *:*/30:00"
systemd-analyze calendar "*-*-* *:00:00"
systemd-analyze calendar "*-*-* 9-17:00:00"





systemd-analyze calendar "*-*-* *:0/2:00"
OnCalendar=*-*-* *:0/3:00
systemd-analyze calendar "*-*-* *:0/3:00"
systemd-analyze calendar "*-*-* *:00:00"
OnCalendar=*-*-* *:00:00